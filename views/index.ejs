<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Kroger</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="/htmx.min.js"></script>
  </head>
  <body class="w-screen min-h-screen overflow-y-auto">
    <div
      class="flex flex-col items-center justify-center w-full min-h-screen gap-2 p-10 mx-auto bg-neutral-300"
    >
      <p><%= location.locationId %></p>
      <p><%= location.name %></p>
      <input
        id="search-input"
        class="p-3 text-black bg-white outline-none"
        type="search"
        name="search"
        placeholder="Search Products..."
        hx-post="/product/search?locationId=<%= location.locationId %>"
        hx-trigger="keyup changed delay:500ms, search"
        hx-target="#search-results"
        hx-indicator="#search-indicator"
      />
      <div id="search-results"></div>
      <div id="search-indicator">Loading...</div>
      <!-- Infinite Scroll Placeholder -->
      <div
        id="load-more-placeholder"
        class="w-full py-4 text-center"
        hx-get="/product/search/more?locationId=<%= location.locationId %>&start=0"
        hx-trigger="revealed"
        hx-target="#search-results"
        hx-swap="beforeend"
        hx-indicator="#search-indicator"
      >
        Load more products...
      </div>
    </div>
    <script>
      // Function to update the hx-get attribute with the current search term
      function updateInfiniteScroll(searchTerm) {
        const loadMorePlaceholder = document.getElementById(
          "load-more-placeholder"
        );
        if (loadMorePlaceholder) {
          const locationId = "<%= location.locationId %>";
          const newUrl = `/product/search/more?locationId=${locationId}&start=0&search=${encodeURIComponent(
            searchTerm
          )}`;
          loadMorePlaceholder.setAttribute("hx-get", newUrl);
        }
      }

      // Event listener for the search input
      const searchInput = document.getElementById("search-input");
      searchInput.addEventListener("input", function () {
        updateInfiniteScroll(this.value);
      });
    </script>
    <style>
      #search-indicator {
        opacity: 0;
      }
      .htmx-request {
        opacity: 1;
      }
    </style>
  </body>
</html>
